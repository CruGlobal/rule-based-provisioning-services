import org.ccci.idm.obj.SsoUser
import org.ccci.idm.obj.RoleAssignment
import org.ccci.soa.obj.USEmployment
import java.util.Date

global java.util.Date now

function Date addDaysToDates(Date termDate, int graceDays)
{
    Date termDatePlusGrace = new Date();
    termDatePlusGrace.setTime(termDate.getTime()+graceDays*24L*60*60*1000);
    return termDatePlusGrace;
}

declare GracePeriodInfo
	endDate : Date
end

rule "ActivateGracePeriodForStaff"
	when
		USEmployment( emplStatus != "A", paygroup in ("USS", "INT", "RCE", "SAL", "HFT", "HPT"), addDaysToDates($termDate, 90)>=now, $termDate : termDateAsDate)
	then
		insert(new GracePeriodInfo(addDaysToDates($termDate, 90)));
end

rule "ActivateGracePeriodForInterns"
	when
		USEmployment( emplStatus != "A", paygroup not in ("USS", "INT", "RCE", "SAL", "HFT", "HPT"), $termDate : termDateAsDate)
	then
		insert(new GracePeriodInfo(addDaysToDates($termDate, 30)));
end

rule "RemoveManuallyAssignedStaffWebConsumer"
    dialect "mvel"
    when
        USEmployment( emplStatus != "A" )
        not GracePeriodInfo( endDate >= now )
        r : RoleAssignment( roleId=="ccci:itroles:uscore:stellent:roles:StaffOnlyConsumer" )
    then
        retract( r );
end

rule "WithinGracePeriod"
    dialect "mvel"
    when
        USEmployment( emplStatus != "A" )
        GracePeriodInfo( endDate >= now, $endDate : endDate)
    then
        insert(new RoleAssignment("ccci:itroles:uscore:stellent:roles:StaffOnlyConsumer", $endDate))
end

rule "EnableStaffWebConsumerWhenActive"
    dialect "mvel"
    when
        USEmployment( emplStatus == "A" )
    then
        insert(new RoleAssignment("ccci:itroles:uscore:stellent:roles:StaffOnlyConsumer"))
end
